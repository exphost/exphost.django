- block:
  - name: install compile packages
    yum:
      name:
        - gcc
  become: True
- block:
  - name: install  uwsgi
    pip:
      virtualenv: "{{ app.value.django.user.home }}/django/venv"
      virtualenv_command: /usr/bin/python3 -m venv
      name: uwsgi
    vars:
      ansible_python_interpreter: /usr/bin/python3

  become: True
  become_user: "{{ app.value.django.user.user }}"

- block:
  - name: set fcontext
    sefcontext:
      target: "{{ item.target }}"
      setype: "{{ item.setype }}"
      state: present
    loop:
      - target: "{{ app.value.django.user.home }}/django(/.*)?"
        setype: httpd_sys_rw_content_t
      - target: "{{ app.value.django.user.home }}/django/venv/bin(/.*)?"
        setype: httpd_exec_t
      - target: "{{ app.value.django.user.home }}/django/venv/lib(/.*)?"
        setype: httpd_sys_rw_content_t
      - target: "{{ app.value.django.user.home }}/django/venv/.*\\.so"
        setype: httpd_exec_t
    notify:
      - restorecon django

  - name: add port to selinux
    seport:
      ports: "{{ app.value.django.configs.server.socket.ports.main }},{{ app.value.django.configs.server.socket.ports.stats }}"
      proto: tcp
      setype: http_port_t
      state: present
    when: app.value.django.configs.server.socket.type|default('') == 'tcp'

  - name: copy service file
    template:
      src: django_uwsgi.service
      dest: "/etc/systemd/system/{{ app.value.django.user.user }}-django-uwsgi-{{ app.key }}.service"
      mode: 0644
    notify:
      - restart uwsgi
  - meta: flush_handlers

  - name: start app
    systemd:
      daemon_reload: yes
      name: "{{ app.value.django.user.user }}-django-uwsgi-{{ app.key }}.service"
      state: started
  become: True
  become_user: root
